version: '3.8'

services:
  # PostgreSQL Database for Foundation
  foundation-db:
    image: postgres:15-alpine
    container_name: great-nigeria-foundation-db
    environment:
      POSTGRES_DB: ${DB_DATABASE:-great_nigeria_foundation}
      POSTGRES_USER: ${DB_USERNAME:-foundation_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-foundation_pass}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "${DB_EXTERNAL_PORT:-5433}:5432"
    volumes:
      - foundation_db_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./database/backups:/backups
    networks:
      - foundation-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-foundation_user} -d ${DB_DATABASE:-great_nigeria_foundation}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis for Foundation (Sessions, Cache)
  foundation-redis:
    image: redis:7-alpine
    container_name: great-nigeria-foundation-redis
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD:-}
      --appendonly yes
      --appendfsync everysec
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    ports:
      - "${REDIS_EXTERNAL_PORT:-6380}:6379"
    volumes:
      - foundation_redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - foundation-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
>>>>>>> e1c0bd8 (Phase 1 Task 1.4: Refine Docker Setup)

  # Foundation Application
  foundation-app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILD_DATE=${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        - VCS_REF=${VCS_REF:-$(git rev-parse --short HEAD)}
    image: great-nigeria-foundation:${VERSION:-latest}
    container_name: great-nigeria-foundation-app
    environment:
      # Database Configuration
      DB_HOST: foundation-db
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME:-foundation_user}
      DB_PASSWORD: ${DB_PASSWORD:-foundation_pass}
      DB_DATABASE: ${DB_DATABASE:-great_nigeria_foundation}
      DB_SSL_MODE: ${DB_SSL_MODE:-disable}

      # Redis Configuration
      REDIS_HOST: foundation-redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      REDIS_DATABASE: ${REDIS_DATABASE:-0}

      # Server Configuration
      SERVER_HOST: ${SERVER_HOST:-0.0.0.0}
      SERVER_PORT: ${SERVER_PORT:-8080}
      ENVIRONMENT: ${ENVIRONMENT:-development}

      # Auth Configuration
      JWT_SECRET: ${JWT_SECRET:-foundation-jwt-secret-key-change-in-production}
      ACCESS_TOKEN_EXPIRATION: ${ACCESS_TOKEN_EXPIRATION:-15m}
      REFRESH_TOKEN_EXPIRATION: ${REFRESH_TOKEN_EXPIRATION:-168h}

      # Email Configuration
      SMTP_HOST: ${SMTP_HOST:-}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USERNAME: ${SMTP_USERNAME:-}
      SMTP_PASSWORD: ${SMTP_PASSWORD:-}
      FROM_EMAIL: ${FROM_EMAIL:-noreply@greatnigeria.com}
      FROM_NAME: ${FROM_NAME:-Great Nigeria Library}

      # OAuth Configuration
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-}
      GOOGLE_REDIRECT_URL: ${GOOGLE_REDIRECT_URL:-http://localhost:8080/auth/google/callback}

      # Storage Configuration
      STORAGE_TYPE: ${STORAGE_TYPE:-local}
      STORAGE_LOCAL_PATH: ${STORAGE_LOCAL_PATH:-./uploads}
      S3_REGION: ${S3_REGION:-}
      S3_BUCKET: ${S3_BUCKET:-}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY:-}
      S3_SECRET_KEY: ${S3_SECRET_KEY:-}

      # Logging Configuration
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_FORMAT: ${LOG_FORMAT:-json}
      LOG_OUTPUT: ${LOG_OUTPUT:-stdout}
      LOG_FILE: ${LOG_FILE:-app.log}

      # Runtime Configuration
      GIN_MODE: ${GIN_MODE:-release}
      TZ: ${TZ:-UTC}
    ports:
      - "${SERVER_EXTERNAL_PORT:-8080}:${SERVER_PORT:-8080}"
    depends_on:
      foundation-db:
        condition: service_healthy
      foundation-redis:
        condition: service_healthy
    networks:
      - foundation-network
    restart: unless-stopped
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./config:/app/config:ro
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "--timeout=5", "http://localhost:${SERVER_PORT:-8080}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx Reverse Proxy (Optional - for production)
  foundation-nginx:
    image: nginx:1.25-alpine
    container_name: great-nigeria-foundation-nginx
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./uploads:/var/www/uploads:ro
    depends_on:
      - foundation-app
    networks:
      - foundation-network
    restart: unless-stopped
    profiles:
      - production
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 64M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  foundation_db_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DB_DATA_PATH:-./data/postgres}
  foundation_redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${REDIS_DATA_PATH:-./data/redis}

networks:
  foundation-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
